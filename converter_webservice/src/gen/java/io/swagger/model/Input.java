/*
 * DataConverter
 * converting from xml to json and vice versa
 *
 * OpenAPI spec version: 1.00
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.validation.Valid;

/**
 * Input
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2021-03-09T02:20:28.751Z[GMT]")public class Input   {
  @JsonProperty("type")
  private Type type = null;

  @JsonProperty("customerData")
  private String customerData = null;

  public Input type(Type type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   **/
  @JsonProperty("type")
  @Schema(description = "")
  @Valid
  public Type getType() {
    return type;
  }

  public void setType(Type type) {
    this.type = type;
  }

  public Input customerData(String customerData) {
    this.customerData = customerData;
    return this;
  }

  /**
   * Get customerData
   * @return customerData
   **/
  @JsonProperty("customerData")
  @Schema(description = "")
  public String getCustomerData() {
    return customerData;
  }

  public void setCustomerData(String customerData) {
    this.customerData = customerData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Input input = (Input) o;
    return Objects.equals(this.type, input.type) &&
        Objects.equals(this.customerData, input.customerData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, customerData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Input {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    customerData: ").append(toIndentedString(customerData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
